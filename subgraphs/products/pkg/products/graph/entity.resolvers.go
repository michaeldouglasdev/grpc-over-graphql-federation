package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"products-subgraph/data"
	"products-subgraph/graph/model"
)

// FindFeaturedProductSectionByID is the resolver for the FeaturedProductSection entity.
func (r *entityResolver) FindFeaturedProductSectionByID(ctx context.Context, id string) (*model.FeaturedProductSection, error) {
	// Buscar seção por ID
	for _, section := range data.FEATURED_PRODUCTS {
		if section.ID == id {
			return section, nil
		}
	}
	return nil, nil
}

// FindProductByID is the resolver for the Product entity.
func (r *entityResolver) FindProductByID(ctx context.Context, id string) (*model.Product, error) {
	// Buscar produto por ID em todas as seções
	for _, section := range data.FEATURED_PRODUCTS {
		for _, product := range section.Products {
			if product.ID == id {
				return product, nil
			}
		}
	}

	// Buscar nos produtos adicionais
	for _, product := range data.PRODUTOS_ADICIONAIS {
		if product.ID == id {
			return product, nil
		}
	}

	return nil, nil
}

// Entity returns EntityResolver implementation.
func (r *Resolver) Entity() EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
